---
import type { Definition } from '@/service/fetchMeaning'

export interface Props {
  definitions: Definition[]
  partOfSpeech: string
  synonyms: string[]
}

const { definitions, partOfSpeech, synonyms } = Astro.props
---

<div class="space-y-8">
  <div class="flex items-center gap-4">
    <span class="italic font-semibold">{partOfSpeech}</span>
    <div class="h-0.5 w-full bg-gray-100 rounded-full"></div>
  </div>

  {
    definitions?.length > 0 ? (
      <div>
        <h2 class="text-gray-500" id="meaning">
          Meaning
        </h2>
        <ul
          class="list-disc list-outside mt-4 space-y-4"
          aria-labelledby="meaning"
        >
          {definitions.map((item) => (
            <li class="ml-4 sm:ml-8 marker:text-accent text-gray-700">
              <span>{item.definition}</span>
              {item.example?.length > 0 ? (
                <span class="block text-gray-500 mt-2">"{item.example}"</span>
              ) : null}
            </li>
          ))}
        </ul>
      </div>
    ) : null
  }

  {
    synonyms?.length > 0 ? (
      <div class="flex gap-4">
        <h2 class="text-gray-500" id="synonyms">
          Synonyms
        </h2>
        <ul aria-labelledby="synonyms">
          {synonyms.map((item, index) => (
            <li class="text-accent font-semibold inline">
              <span>
                {`${item}${index !== synonyms.length - 1 ? ',' : ''}`}
              </span>
            </li>
          ))}
        </ul>
      </div>
    ) : null
  }
</div>
